   public void ConfigureServices(IServiceCollection services)
        { 

services.AddAuthentication(option => {
                    option.DefaultAuthenticateScheme = JwtBearerDefaults.AuthenticationScheme;
                    option.DefaultChallengeScheme = JwtBearerDefaults.AuthenticationScheme;
                    option.DefaultScheme = JwtBearerDefaults.AuthenticationScheme;
            }).AddJwtBearer(options => {
                 options.SaveToken = true;
                 options.RequireHttpsMetadata = true;
                 options.TokenValidationParameters =  new TokenValidationParameters()
                 {
                    ValidateIssuer = true,
                    ValidateAudience = true,
                    ValidAudience = Configuration["Jwt:Site"],
                    ValidIssuer = Configuration["Jwt:Site"],
                    IssuerSigningKey =  new SymmetricSecurityKey(Encoding.UTF8.GetBytes( Configuration["Jwt:SigningKey"]))
                 };
            });


}

public void Configure(IApplicationBuilder app, IHostingEnvironment env, ILoggerFactory loggerFactory)
{
        /*Note: the below must be the 
		first to register in this Configure function before other function
	*/
	 app.UseAuthentication();
}